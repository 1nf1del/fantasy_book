    <% @dates.each do |date| %>
        <% @props.each do |prop| %>
          <% if prop.time.to_date === date %>
            <div class="col-md-7 matchups">
            <div class="col-md-3 matchup-left choice open"><div class="side open-side">Matchup Side Open</div>

              <div class="info open-info">
                <div class="contenders" data-propchoiceid="<%= prop.prop_choices.first.id %>"><%= prop.prop_choices.first.name %> <div class="odd-line"> <%= prop.prop_choices.first.display_spread %> </div> </div>
                <div class="enter-contest">
                <div class="available-cost available-odd">Available: <%= number_to_currency prop.prop_choices.first.available_dollars %> </div><button name="button" type="button" class="enter-button first" data-propchoiceid="<%= prop.prop_choices.first.id %>">Enter Contest</button></div>


              </div>
              </div>
            <div class="col-md-1 matchup-info"><p> <%= prop.sport.name %> </p><%= prop.time.strftime("%B %-d, %Y %n %l:%M %P EST") %>
              <div class="vs">Vs</div>
              <div class="prop-timer" data-time="<%= prop.time.to_i * 1000  %>"> </div>
              <div class="tv"> <%= prop.tv %> </div>
            </div>
            <div class="col-md-3 matchup-right choice open"><div class="side open-side">Matchup Side Open</div>
            <div class="available-cost available-even">Available: <%= number_to_currency prop.prop_choices.last.available_dollars %> </div>
            <div class="info open-info">
            <div class="contenders" data-propchoiceid="<%= prop.prop_choices.last.id %>"> <%= prop.prop_choices.last.name %> <div class="even-line"> <%= prop.prop_choices.last.display_spread %> </div> </div>
            <div class="enter-contest"><button name="button" type="button" class="enter-button last" data-propchoiceid="<%= prop.prop_choices.last.id %>" >Enter Contest</button></div>
            </div>
            </div>
            </div>
          <% end %>
        <% end %>
    <% end %>



<script type='text/javascript'>
  $(document).ready(function(){

    var odds = $('.matchups').find('.available-odd'), i;
    for (var i = 0; i < odds.length; i ++) {
      if ($(odds[i]).text() == "Available: $0.00 ") {
        $(odds[i]).text("")
        choice = $(odds[i]).closest('.choice')
        side = $(choice).find(".open-side")
        info = $(choice).find(".open-info")
        btn = $(choice).find(".enter-button")
        $(side).text("Matchup Side Closed")
        $(side).removeClass("open-side")
        $(side).addClass("closed-side")
        $(choice).removeClass("open")
        $(choice).addClass("closed")
        $(info).removeClass("open-info")
        $(info).addClass("closed-info")
        $(btn).prop('disabled', true)
      }
    }

    var evens = $('.matchups').find('.available-even'), i;
    for (var i = 0; i < odds.length; i ++) {
      if ($(evens[i]).text() == "Available: $0.00 ") {
        $(evens[i]).text("")
        choice = $(evens[i]).closest('.choice')
        side = $(choice).find(".open-side")
        info = $(choice).find(".open-info")
        btn = $(choice).find(".enter-button")
        $(side).text("Matchup Side Closed")
        $(side).removeClass("open-side")
        $(side).addClass("closed-side")
        $(choice).removeClass("open")
        $(choice).addClass("closed")
        $(info).removeClass("open-info")
        $(info).addClass("closed-info")
        $(btn).prop('disabled', true)
      }
    }

    setInterval(function () {
      var countdowns = $('.matchups').find('.prop-timer'), i;
      for (var i = 0; i < countdowns.length; i ++) {
        var target_date = $(countdowns[i]).data('time')
        var hours, minutes, seconds;
        var current_date = new Date().getTime();
        var seconds_left = (target_date - current_date) / 1000;
        hours = parseInt(seconds_left / 3600);
        seconds_left = seconds_left % 3600;
        minutes = parseInt(seconds_left / 60);
        seconds = parseInt(seconds_left % 60);
        if (hours.toString().length == 1) {
          hours = "0" + hours;
        }
        if (minutes.toString().length == 1) {
          minutes = "0" + minutes;
        }
        if (seconds.toString().length == 1) {
          seconds = "0" + seconds;
        }
        if (hours <= 0 && minutes <= 0 && seconds <= 0 ) {
          $(countdowns[i]).text("Event has started.");
        } else {
          $(countdowns[i]).text("Starts In " + hours + ":" + minutes + ":" + seconds);
        }
      }
    }, 1000);

    setInterval(function () {
      var wagers = $('.matchups').find('.enter-button');
      $.each(wagers, function(index, value) {
        $.ajax({
          url: "/pc",
          type: "GET",
          data: {prop_choice_id: $(value).data('propchoiceid')},
          success: function (data) {
            updateAvailable(data, value);
          },
          error: function (xhr, status, error) {
            console.log(status + error);
          }
        });
      });
    }, 4000);

    function updateAvailable (responseData, value) {
          available = responseData.available_dollars;
          display_spread = responseData.display_spread;
          if (value.classList.contains("first")) {
            container = value.closest(".choice")
            var odd = $(container).find('.available-odd')
            var side = $(container).find('.side')
            var info = $(container).find('.info')
            if (available == 0) {
              $(odd).text("")
              $(side).text("Matchup Side Closed")
              $(side).removeClass("open-side")
              $(side).addClass("closed-side")
              $(container).removeClass("open")
              $(container).addClass("closed")
              $(info).removeClass("open-info")
              $(info).addClass("closed-info")
              $(value).prop('disabled', true)
            } else {
              $(odd).text("Available: $" + available.toFixed(2))
              $(side).text("Matchup Side Open")
              $(side).addClass("open-side")
              $(side).removeClass("closed-side")
              $(container).addClass("open")
              $(container).removeClass("closed")
              $(info).addClass("open-info")
              $(info).removeClass("closed-info")
              $(value).prop('disabled', false);
            }
          } else {
            container = value.closest(".choice")
            var even = $(container).find('.available-even')
            var side = $(container).find('.side')
            var info = $(container).find('.info')
            even.html("Available: $" + available.toFixed(2))
            if (available == 0) {
              $(even).text("")
              $(side).text("Matchup Side Closed")
              $(side).removeClass("open-side")
              $(side).addClass("closed-side")
              $(container).removeClass("open")
              $(container).addClass("closed")
              $(info).removeClass("open-info")
              $(info).addClass("closed-info")
              $(value).prop('disabled', true);
            } else {
              $(side).text("Matchup Side Open")
              $(side).addClass("open-side")
              $(side).removeClass("closed-side")
              $(container).addClass("open")
              $(container).removeClass("closed")
              $(info).addClass("open-info")
              $(info).removeClass("closed-info")
              $(value).prop('disabled', false);
            }
          }
    }
  })
</script>




